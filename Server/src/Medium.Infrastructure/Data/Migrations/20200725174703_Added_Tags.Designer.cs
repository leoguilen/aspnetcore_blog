// <auto-generated />
using System;
using Medium.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Medium.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200725174703_Added_Tags")]
    partial class Added_Tags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Medium.Core.Domain.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ConfirmedEmail")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deactivated")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c6380bf-e221-427d-9577-cb368a8aec09"),
                            ConfirmedEmail = true,
                            CreatedAt = new DateTime(2020, 7, 25, 14, 47, 0, 0, DateTimeKind.Unspecified),
                            Deactivated = false,
                            Deleted = false,
                            Email = "admin.master@email.com",
                            FirstName = "Administrador",
                            LastName = "Master",
                            Password = "Jp+pLpdsmvhDHoOPcJ4uLq3trdWzkbubselxno+DlOI=",
                            Salt = "TjB5Zbhe0p8=",
                            UpdatedAt = new DateTime(2020, 7, 25, 14, 47, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin.master"
                        });
                });

            modelBuilder.Entity("Medium.Core.Domain.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1778f149-1b44-40f2-b01d-3bc1ff343da5"),
                            Attachments = "",
                            Content = "Post added in migration",
                            CreatedAt = new DateTime(2020, 7, 25, 14, 47, 0, 0, DateTimeKind.Unspecified),
                            Title = "Post Example",
                            UpdatedAt = new DateTime(2020, 7, 25, 14, 47, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0dae5e32-10bb-4ecc-93e6-ff9e5eeb92f7"),
                            CreatedAt = new DateTime(2020, 7, 25, 14, 47, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tag 1",
                            UpdatedAt = new DateTime(2020, 7, 25, 14, 47, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
